{"version":3,"sources":["../node_modules/peerjs/dist sync","Spinner.js","App.js","ActionInput.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Spinner","className","mediaStream","peer","ActionInput","props","state","value","style","width","this","placeholder","maxLength","height","padding","fontSize","onChange","event","setState","target","onKeyPress","key","action","autoFocus","onClick","icon","Component","defaultProps","caller","incomingCall","mediaConnections","App","getId","bind","call","accept","reject","username","ringing","navigator","mediaDevices","getUserMedia","audio","video","then","stream","document","getElementById","srcObject","onloadedmetadata","play","window","addEventListener","forceUpdate","Peer","on","incoming","metadata","mediaConnection","push","answer","close","innerHeight","flexDirection","innerWidth","muted","position","right","bottom","maxHeight","maxWidth","clipboard","writeText","textContent","faPhone","faArrowRight","name","margin","backgroundColor","faPhoneSlash","Boolean","location","hostname","match","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0c81fc50.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 22;","import React from \"react\";\n\nexport function Spinner() {\n    return (\n        <div className=\"spinner\">\n            <div className=\"cube1\"></div>\n            <div className=\"cube2\"></div>\n        </div>\n    );\n}","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"./Spinner.css\";\nimport Peer from \"peerjs\";\nimport { Spinner } from \"./Spinner\";\nimport { faArrowRight, faPhone, faPhoneSlash } from '@fortawesome/free-solid-svg-icons'\nimport { ActionInput } from \"./ActionInput\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nvar mediaStream;\nvar peer;\nvar mediaConnections = [];\nvar caller;\nvar incomingCall;\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getId = this.getId.bind(this);\n    this.call = this.call.bind(this);\n    this.accept = this.accept.bind(this);\n    this.reject = this.reject.bind(this);\n\n    this.state = {\n      username: \"\",\n      id: \"\",\n      ringing: false,\n      call: false,\n    }\n  }\n\n  componentDidMount() {\n    navigator.mediaDevices.getUserMedia({ audio: true, video: true })\n      .then(function (stream) {\n        var video = document.getElementById(\"camera\");\n        video.srcObject = stream;\n        video.onloadedmetadata = function () {\n          video.play();\n        };\n        mediaStream = stream;\n      });\n\n    this.getId();\n\n    window.addEventListener(\"resize\", () => this.forceUpdate());\n  }\n\n  getId() {\n    peer = new Peer();\n\n    peer.on(\"open\", (id) => {\n      this.setState({ id: id });\n    });\n\n    peer.on(\"call\", (incoming) => {\n      caller = incoming.metadata.username;\n      incomingCall = incoming;\n      this.setState({ ringing: true });\n    });\n  }\n\n  call(id) {\n    const mediaConnection = peer.call(id, mediaStream, { metadata: { username: this.state.username } });\n\n    mediaConnections.push(mediaConnection);\n\n    mediaConnection.on(\"stream\", (stream) => {\n      this.setState({ call: true });\n      var video = document.getElementById(\"incoming-video\");\n      video.srcObject = stream;\n      video.onloadedmetadata = (e) => {\n        video.play();\n      };\n    });\n  }\n\n  accept() {\n    incomingCall.answer(mediaStream);\n    mediaConnections.push(incomingCall);\n    this.setState({ call: true });\n    incomingCall.on(\"stream\", (stream) => {\n      var video = document.getElementById(\"incoming-video\");\n      video.srcObject = stream;\n      video.onloadedmetadata = () => {\n        video.play();\n      };\n    });\n    this.setState({ ringing: false });\n  }\n\n  reject() {\n    incomingCall.close();\n    this.setState({ ringing: false });\n  }\n\n  render() {\n    return (\n      <div className=\"App\" style={{ height: window.innerHeight, flexDirection: (window.innerWidth > window.innerHeight) ? \"row\" : \"column\" }}>\n        <video id=\"camera\" muted style={!this.state.call ? {} : { position: \"absolute\", right: 20, bottom: 20, maxHeight: 300, maxWidth: 300 }} />\n        <div className=\"spacer\" />\n        {!this.state.call ?\n          <div id=\"panel\">\n            {!this.state.username ? <div>\n              <ActionInput placeholder=\"Enter your name\" maxLength={40} icon={faArrowRight} autoFocus={true} action={(name) => { this.setState({ username: name }) }} />\n            </div> :\n              !this.state.id ? <Spinner /> :\n                <div>\n                  <p id=\"id\">Your ID: <span className=\"clickable-text\" onClick={(event) => { navigator.clipboard.writeText(event.target.textContent) }}>{this.state.id}</span></p>\n                  <br />\n                  <ActionInput placeholder=\"Enter peer ID\" icon={faPhone} autoFocus={true} action={this.call} />\n                </div>\n            }\n            {/* <button onClick={this.getId}>Get ID</button> */}\n          </div> :\n          <video id=\"incoming-video\" />\n        }\n        {this.state.ringing && <div className=\"popup\">\n          <p style={{ margin: 10 }}>{caller} is calling you</p>\n          <button className=\"icon-button\" onClick={() => this.reject()} style={{ backgroundColor: \"#BF616A\" }}>\n            <FontAwesomeIcon icon={faPhoneSlash} />\n          </button>\n          <button className=\"icon-button\" onClick={() => this.accept()} style={{ backgroundColor: \"#A3BE8C\" }}>\n            <FontAwesomeIcon icon={faPhone} />\n          </button>\n        </div>}\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport class ActionInput extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { value: \"\" };\n    }\n\n    render() {\n        return <div className=\"action-input\" style={{width: this.props.width}}>\n            <input\n                placeholder={this.props.placeholder}\n                maxLength={this.props.maxLength}\n                style={{\n                    width: this.props.width - this.props.height - this.props.height / 2,\n                    height: this.props.height / 2,\n                    padding: this.props.height / 4,\n                    fontSize: this.props.height * 0.44\n                }}\n                onChange={(event) => { this.setState({ value: event.target.value }) }}\n                onKeyPress={(event) => {if (event.key === \"Enter\" && this.state.value) this.props.action(this.state.value)}}\n                autoFocus={this.props.autoFocus}\n            />\n            <button\n                onClick={() => {if (this.state.value) this.props.action(this.state.value)}}\n                style={{\n                    width: this.props.height,\n                    height: this.props.height,\n                    padding: this.props.height / 4,\n                    fontSize: this.props.height * 0.44,\n                }}\n            >\n                <FontAwesomeIcon icon={this.props.icon} />\n            </button>\n        </div>\n    }\n}\n\nActionInput.defaultProps = {\n    width: 250,\n    height: 41,\n    placeholder: \"\",\n    autoFocus: false,\n    maxLength: 524288,\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}